<?xml version="1.0" encoding="UTF-8"?>
<!-- Mapper XML 설정 태그 -->
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.eatplatform.web.persistence.UserMapper">
	
	<resultMap type="com.eatplatform.web.domain.UserVO" id="userResultMap">
		<id property="userId" column="USER_ID"/>
		<result property="username" column="USERNAME"/>
		<result property="password" column="PASSWORD"/>
		<result property="email" column="EMAIL"/>
		<result property="phone" column="PHONE"/>
		<result property="name" column="NAME"/>
		<result property="active" column="ACTIVE"/>
		<result property="regDate" column="REG_DATE"/>
	</resultMap>
	
	<resultMap type="com.eatplatform.web.domain.JoinUserVO" id="joinUserResultMap">
		<id property="userId" column="USER_ID"/>
		<result property="username" column="USERNAME"/>
		<result property="password" column="PASSWORD"/>
		<result property="email" column="EMAIL"/>
		<result property="phone" column="PHONE"/>
		<result property="name" column="NAME"/>
		<result property="active" column="ACTIVE"/>
		<result property="regDate" column="REG_DATE"/>
		<result property="roleName" column="ROLE_NAME"/>
	</resultMap>
	
	<select id="selectUserAllByEmail" resultMap="userResultMap">
		SELECT * FROM USER_MEMBER
		WHERE email = #{email}
		UNION ALL
		SELECT * FROM USER_STORE
		WHERE email = #{email}
		UNION ALL
		SELECT * FROM USER_ADMIN
		WHERE email = #{email}
	</select>
	
	<select id="selectUserByUsername" resultMap="userResultMap">
		SELECT * FROM USER_MEMBER
		WHERE USERNAME = #{username}
		AND ACTIVE = 1
	</select>
	
	<select id="selectUserByUserId" resultMap="userResultMap">
		SELECT * FROM USER_MEMBER
		WHERE USER_ID = #{userId}
	</select>
	
	<select id="countUser" resultType="Integer">
		SELECT COUNT(USER_ID) AS COUNT FROM (
		    SELECT USER_ID FROM USER_MEMBER
		    WHERE USERNAME = #{username}
		    UNION ALL
		    SELECT USER_ID FROM USER_STORE
		    WHERE USERNAME = #{username}
		    UNION ALL
		    SELECT USER_ID FROM USER_ADMIN
		    WHERE USERNAME = #{username}
		)
	</select>
	
	<select id="countUserEmail" resultType="Integer">
		SELECT COUNT(USER_ID) FROM (
		    SELECT USER_ID FROM USER_MEMBER
		    WHERE EMAIL = #{email}
		    UNION ALL
		    SELECT USER_ID FROM USER_STORE
		    WHERE EMAIL = #{email}
		    UNION ALL
		    SELECT USER_ID FROM USER_ADMIN
		    WHERE EMAIL = #{email}
		)
	</select>
	
	<select id="countUserEmailByUserIdEmail" resultType="Integer">
		SELECT COUNT(USER_ID) AS COUNT FROM (
		    SELECT USER_ID FROM USER_MEMBER
		    WHERE EMAIL = #{email}
		    AND USERNAME = #{username}
		    UNION ALL
		    SELECT USER_ID FROM USER_STORE
		    WHERE EMAIL = #{email}
		    AND USERNAME = #{username}
		    UNION ALL
		    SELECT USER_ID FROM USER_ADMIN
		    WHERE EMAIL = #{email}
		    AND USERNAME = #{username}
		)
	</select>
	
	<select id="selectUsernameByEmail" resultMap="userResultMap">
		SELECT * FROM USER_MEMBER
		WHERE EMAIL = #{email}
	</select>
	
	<select id="selectUserJoinUserRole" resultMap="joinUserResultMap">
		SELECT u.*, r.ROLE_NAME FROM USER_MEMBER u
		LEFT JOIN ROLE_LIST r
		ON u.USERNAME = r.USERNAME
		WHERE USER_ID = #{userId}
	</select>
	
	<insert id="insertUser" parameterType="com.eatplatform.web.domain.UserVO" useGeneratedKeys="true" keyProperty="userId" keyColumn="USER_ID">
		INSERT INTO USER_MEMBER
		VALUES(
			USER_SEQ.NEXTVAL,
			#{username},
			#{password},
			#{email},
			#{phone},
			#{name},
			1,
			SYSDATE
		)
	</insert>
	
	<insert id="insertWithdrawlUserByActive">
		INSERT INTO WITHDRAWL_USER(WITHDRAWL_ID, USERNAME, NAME, EMAIL, PHONE, ROLE_NAME, REG_DATE) 
		SELECT WITHDRAWL_USER_SEQ.NEXTVAL, U.USERNAME, U.NAME, U.EMAIL, U.PHONE, R.ROLE_NAME, SYSDATE FROM USER_MEMBER U
		INNER JOIN ROLE_LIST R
		ON U.USERNAME = R.USERNAME
		WHERE ACTIVE = 0
	</insert>
	
	<update id="updateUser">
		UPDATE USER_MEMBER
		SET NAME = #{name},
		PHONE = #{phone}
		WHERE USER_ID = #{userId}
	</update>
	
	<update id="updatePassword">
		UPDATE USER_MEMBER
		SET PASSWORD = #{password}
		<choose>
			<when test="userId != 0">
				WHERE USER_ID = #{userId}				
			</when>
			<when test="email != null or email != ''">
				WHERE EMAIL = #{email}
			</when>
		</choose>
	</update>
	
	<update id="updateUserActive">
		UPDATE USER_MEMBER
		SET ACTIVE = #{active}
		WHERE USER_ID = #{userId}
	</update>
	
	<delete id="deleteUserByActive">
		DELETE USER_MEMBER
		WHERE ACTIVE = #{active}
	</delete>
	
	<delete id="deleteUserByUserId">
		DELETE USER_MEMBER
		WHERE USER_ID = #{userId}
	</delete>
	
</mapper>