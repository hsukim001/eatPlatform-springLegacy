<?xml version="1.0" encoding="UTF-8"?>
<!-- Mapper XML 설정 태그 -->
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

	
<!-- namespace -->
<mapper	namespace="com.eatplatform.web.persistence.UserMapper">

	<resultMap type="com.eatplatform.web.domain.UserVO" id="userResultMap">
		<id property="userId" column="USER_ID" />
		<result property="userPw" column="USER_PW"/>
		<result property="userEmail" column="USER_EMAIL"/>
		<result property="userPhone" column="USER_PHONE"/>
		<result property="userName" column="USER_NAME"/>
		<result property="userAuth" column="USER_AUTH"/>
		<result property="userActive" column="USER_ACTIVE"/>
		<result property="userRegDate" column="USER_REG_DATE"/>
	</resultMap>
	
	<!-- 회원 정보 조회(userId) -->
	<select id="selectUserByUserId" resultMap="userResultMap">
		SELECT * FROM USER_LIST 
		WHERE USER_ID = #{userId}
		AND USER_ACTIVE = 1
	</select>
	
	<!-- 회원 아이디 조회(userEmail) -->
	<select id="selectUserIdByUserEmail" resultMap="userResultMap">
		SELECT USER_ID FROM USER_LIST
		WHERE USER_EMAIL = #{userEmail}
		AND USER_ACTIVE = 1
	</select>
	
	<!-- 회원 이메일 유무 확인(userEmail) -->
	<select id="checkUserByUserEmail" resultType="Integer">
		SELECT COUNT(USER_EMAIL)
		FROM USER_LIST
		WHERE USER_EMAIL = #{userEmail}
		AND USER_ACTIVE = 1
	</select>
	
	<!-- 회원 이메일 유무 확인(userId, userEmail) -->
	<select id="checkUserByUserIdUserEmail" resultType="Integer">
		SELECT COUNT(USER_EMAIL)
		FROM USER_LIST
		WHERE USER_ID = #{userId}
		AND USER_EMAIL = #{userEmail}
		AND USER_ACTIVE = 1
	</select>
	
	<!-- 회원 아이디 유무 확인(userId) -->
	<select id="checkUserByUserId" resultType="Integer">
		SELECT COUNT(USER_ID)
		FROM USER_LIST
		WHERE USER_ID = #{userId}
		<if test="userActive != null and userActive != 0">
			AND TRIM(USER_ACTIVE) = #{userActive}
		</if>
	</select>
	
	<!-- 비활성화 회원 목록 조회 -->
	<select id="selectUserListByUserActive" resultMap="userResultMap">
		SELECT * FROM USER_LIST
		WHERE USER_ACTIVE = #{userActive}
	</select>
	
	<!-- 회원 등록 -->
	<insert id="insertUser">
		INSERT INTO USER_LIST
		VALUES(
			#{userId},
			#{userPw},
			#{userEmail},
			#{userPhone},
			#{userName},
			#{userAuth},
			#{userActive},
			SYSDATE
		)
	</insert>
	
	<!-- 회원 비활성화 -->
	<update id="updateActiveYnByUserId">
		UPDATE USER_LIST
		SET USER_ACTIVE = #{userActive}
		WHERE USER_ID = #{userId}
	</update>
	
	<!-- 사용자 상세 정보 수정 -->
	<update id="updateUser">
		UPDATE USER_LIST 
		SET USER_EMAIL = #{userEmail},
			USER_PHONE = #{userPhone},
			USER_NAME = #{userName}
		WHERE USER_ID = #{userId}
	</update>
	
	<!-- 비밀번호 변경(로그인) -->
	<update id="updateUserPwByUserId">
		UPDATE USER_LIST
		SET USER_PW = #{userPw}
		WHERE USER_ID = #{userId}
	</update>
	
	<!-- 비밀번호 변경(비로그인) -->
	<update id="updateUserPwByUserEmail">
		UPDATE USER_LIST
		SET USER_PW = #{userPw}
		WHERE USER_EMAIL = #{userEmail}
	</update>
	
	<!-- 삭제 -->
	<delete id="deleteUser">
		DELETE FROM USER_LIST
		WHERE USER_ID = #{userId}
	</delete>
	
</mapper>