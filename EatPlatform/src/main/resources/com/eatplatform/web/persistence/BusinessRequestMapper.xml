<?xml version="1.0" encoding="UTF-8"?>
<!-- Mapper XML 설정 태그 -->
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.eatplatform.web.persistence.BusinessRequestMapper">

	<resultMap type="com.eatplatform.web.domain.BusinessRequestVO" id="businessRequestResultMap">
		<id property="businessRequestId" column="BUSINESS_REQUEST_ID" />
		<result property="requestStatus" column="REQUEST_STATUS"/>
		<result property="businessRequestRegDate" column="BUSINESS_REQUEST_REG_DATE" />
		<result property="businessReqeustUpdateDate" column="BUSINESS_REQUEST_UPDATE_DATE"/>
		<result property="userId" column="USER_ID" />
	</resultMap>
	
	<resultMap type="com.eatplatform.web.domain.JoinBusinessRequestVO" id="joinBusinessRequestResultMap">
		<id property="businessRequestId" column="BUSINESS_REQUEST_ID"/>
		<result property="requestStatus" column="REQUEST_STATUS"/>
		<result property="businessReqeustRegDate" column="BUSINESS_REQUEST_REG_DATE"/>
		<result property="businessReqeustUpdateDate" column="BUSINESS_REQUEST_UPDATE_DATE"/>
		<result property="userId" column="USER_ID"/>
		<result property="username" column="USERNAME"/>
		<result property="name" column="NAME"/>
		<result property="phone" column="PHONE"/>
		<result property="email" column="EMAIL"/>
	</resultMap>
	
	<resultMap type="com.eatplatform.web.domain.JoinBusinessRequestWithUserAndRoleListVO" id="joinBusinessRequestWithUserAndRoleListResultMap">
		<id property="businessRequestId" column="BUSINESS_REQUEST_ID" />
		<result property="requestStatus" column="REQUEST_STATUS"/>
		<result property="businessRequestRegDate" column="BUSINESS_REQUEST_REG_DATE" />
		<result property="businessReqeustUpdateDate" column="BUSINESS_REQUEST_UPDATE_DATE"/>
		<result property="userId" column="USER_ID" />
		<result property="username" column="USERNAME"/>
		<result property="password" column="PASSWORD"/>
		<result property="email" column="EMAIL"/>
		<result property="phone" column="PHONE"/>
		<result property="name" column="NAME"/>
		<result property="active" column="ACTIVE"/>
		<result property="regDate" column="REG_DATE"/>
		<result property="roleId" column="ROLE_ID"/>
		<result property="roleName" column="ROLE_NAME"/>
	</resultMap>
	
	<select id="selectBusinessRequest" resultMap="businessRequestResultMap">
		SELECT * FROM BUSINESS_REQUEST
		WHERE BUSINESS_REQUEST_ID = #{businessRequestId}
	</select>
	
	<select id="joinBusinessRequestWithUserMemberAndRoleListByBusinessRequestId" resultMap="joinBusinessRequestWithUserAndRoleListResultMap">
		SELECT b.*,
			   u.*,
			   r.*
		FROM BUSINESS_REQUEST b
		INNER JOIN USER_MEMBER u
		ON b.USER_ID = u.USER_ID
		INNER JOIN ROLE_LIST r
		ON u.USERNAME = r.USERNAME
		WHERE b.BUSINESS_REQUEST_ID = #{businessRequestId}
	</select>
	
	<insert id="insertBusinessRequest">
		INSERT INTO BUSINESS_REQUEST (
			BUSINESS_REQUEST_ID,
			REQUEST_STATUS,
			BUSINESS_REQUEST_REG_DATE,
			BUSINESS_REQUEST_UPDATE_DATE,
			USER_ID
		)
		VALUES(
			BUSINESS_REQUEST_SEQ.NEXTVAL,
			'WAIT',
			SYSDATE,
			SYSDATE,
			#{userId}
		)
	</insert>
	
	<select id="selectBusinessRequestByBusinessRequestId" resultMap="joinBusinessRequestResultMap">
		SELECT b.BUSINESS_REQUEST_ID,
			b.REQUEST_STATUS, 
			b.USER_ID,
			b.BUSINESS_REQUEST_REG_DATE,
			b.BUSINESS_REQUEST_UPDATE_DATE,
			u.USERNAME,
			u.NAME,
			u.PHONE,
			u.EMAIL
		FROM BUSINESS_REQUEST b
		INNER JOIN USER_MEMBER u
		ON b.USER_ID = u.USER_ID
		WHERE b.BUSINESS_REQUEST_ID = #{businessRequestId}
	</select>
	
	<select id="selectBusinessRequestListByPagination" resultMap="joinBusinessRequestResultMap">
		SELECT b.BUSINESS_REQUEST_ID,
			b.REQUEST_STATUS, 
			b.USER_ID,
			b.BUSINESS_REQUEST_REG_DATE,
			b.BUSINESS_REQUEST_UPDATE_DATE,
			u.USERNAME,
			u.NAME,
			u.PHONE,
			u.EMAIL
		FROM
		(
		    SELECT ROW_NUMBER() OVER (ORDER BY BUSINESS_REQUEST_ID DESC)
		    AS RN, BUSINESS_REQUEST.* FROM BUSINESS_REQUEST
		) b
		INNER JOIN USER_MEMBER u
		ON b.USER_ID = u.USER_ID
		WHERE b.RN BETWEEN #{start} AND #{end}
		ORDER BY BUSINESS_REQUEST_ID DESC
	</select>
	
	<select id="selectTotalCount" resultType="Integer">
		SELECT COUNT(BUSINESS_REQUEST_ID)
		FROM BUSINESS_REQUEST
	</select>
	
	<select id="selectBusinessRequestIdByuserId" resultType="Integer">
		SELECT NVL(
			(SELECT BUSINESS_REQUEST_ID
			FROM BUSINESS_REQUEST
			WHERE USER_ID = #{userId}), 0
		) AS ID
		FROM DUAL
	</select>
	
	<update id="updateRequestStatusByBusinessRequestId">
		UPDATE BUSINESS_REQUEST
		SET REQUEST_STATUS = #{requestStatus}
		WHERE BUSINESS_REQUEST_ID = #{businessRequestId}
	</update>
	
	<delete id="deleteBusinessRequest">
		DELETE FROM BUSINESS_REQUEST
		WHERE BUSINESS_REQUEST_ID = #{businessRequestId}
	</delete>
</mapper>