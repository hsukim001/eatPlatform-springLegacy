<?xml version="1.0" encoding="UTF-8"?>
<!-- Mapper XML 설정 태그 -->
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.eatplatform.web.persistence.ReservMapper">

	<resultMap type="com.eatplatform.web.domain.ReservVO" id="reservResultMap">
		<id property="reservId" column="RESERV_ID"/>
		<result property="storeId" column="STORE_ID"/>
		<result property="storeName" column="STORE_NAME"/>
		<result property="userId" column="USER_ID"/>
		<result property="reservDate" column="RESERV_DATE"/>
		<result property="reservHour" column="RESERV_HOUR"/>
		<result property="reservMin" column="RESERV_MIN"/>
		<result property="reservPersonnel" column="RESERV_PERSONNEL"/>
		<result property="reservDateCreated" column="RESERV_DATE_CREATED"/>
	</resultMap>
	
	<resultMap type="com.eatplatform.web.domain.StoreScheduleVO" id="storeScheduleResultMap">
		<id property="hour" column="HOUR"/>
		<result property="min" column="MIN"/>
		<result property="reservDate" column="reservDate"/>
		<result property="totalPersonnel" column="TOTAL_PERSONNEL"/>
	</resultMap>
	
	<select id="selectPagingToDay" resultMap="reservResultMap">
		SELECT r.*, 
	       (
	           SELECT s.STORE_NAME 
	           FROM STORE s 
	           WHERE s.STORE_ID = r.STORE_ID
	       ) AS STORE_NAME
		FROM (
		    SELECT RESERV_ID, STORE_ID, USER_ID, RESERV_DATE, RESERV_HOUR, RESERV_MIN, RESERV_PERSONNEL, RESERV_DATE_CREATED,
		           ROW_NUMBER() OVER (ORDER BY RESERV_DATE ASC) AS RN
		    FROM RESERV
		    WHERE USER_ID = #{userId} AND RESERV_DATE >= TRUNC(SYSDATE)
		) r
		WHERE r.RN BETWEEN #{start} AND #{end}
	</select>
	
	<select id="selectPagingPrevDay" resultMap="reservResultMap">
		SELECT r.*, 
	       (
	           SELECT s.STORE_NAME 
	           FROM STORE s 
	           WHERE s.STORE_ID = r.STORE_ID
	       ) AS STORE_NAME
		FROM (
		    SELECT RESERV_ID, STORE_ID, USER_ID, RESERV_DATE, RESERV_HOUR, RESERV_MIN, RESERV_PERSONNEL, RESERV_DATE_CREATED,
		           ROW_NUMBER() OVER (ORDER BY RESERV_DATE DESC) AS RN
		    FROM RESERV
		    WHERE USER_ID = #{userId} AND RESERV_DATE <![CDATA[<]]> TRUNC(SYSDATE)
		) r
		WHERE r.RN BETWEEN #{start} AND #{end}
	</select>
	
	<select id="selectToDayTotalCount" resultType="Integer">
		SELECT COUNT(*)
		FROM RESERV
		WHERE USER_ID = #{userId}
		AND RESERV_DATE >= TRUNC(SYSDATE)
	</select>
	
	<select id="selectPrevDayTotalCount" resultType="Integer">
		SELECT COUNT(*)
		FROM RESERV
		WHERE USER_ID = #{userId}
		AND RESERV_DATE <![CDATA[<]]> TRUNC(SYSDATE)
	</select>
	
	<insert id="insert">
		INSERT INTO RESERV
		VALUES(
			RESERV_SEQ.NEXTVAL,
			#{storeId},
			#{userId},
			#{reservDate},
			#{reservHour},
			#{reservMin},
			#{reservPersonnel},
			SYSDATE
		)
	</insert>
	
	<delete id="delete">
		DELETE RESERV
		WHERE RESERV_ID = #{reservId}
	</delete>
	
	<select id="selectSchedule" resultMap="storeScheduleResultMap">
		SELECT RESERV_DATE, RESERV_HOUR AS HOUR, RESERV_MIN AS MIN, SUM(RESERV_PERSONNEL) AS TOTAL_PERSONNEL
		FROM RESERV
		WHERE STORE_ID = #{storeId}
		AND RESERV_DATE = #{reservDate}
		GROUP BY RESERV_DATE, RESERV_HOUR, RESERV_MIN
		ORDER BY HOUR
	</select>
	
	<select id="selectScheduleForUpdate" parameterType="map" resultMap="reservResultMap">
		SELECT *
		FROM RESERV
		WHERE STORE_ID = #{vo.storeId}
		  AND RESERV_DATE = #{vo.reservDate}
		  AND RESERV_HOUR = #{vo.reservHour}
		  AND RESERV_MIN = #{vo.reservMin}
		FOR UPDATE NO WAIT
	</select>
	
	<insert id="insertDummyIfNotMatched">
		MERGE INTO RESERV r
		USING DUAL
		ON (
		    r.STORE_ID = #{storeId} 
		    AND r.RESERV_DATE = #{reservDate} 
		    AND r.RESERV_HOUR = #{reservHour}
		    AND r.RESERV_MIN = #{reservMin}
		    )
		WHEN NOT MATCHED THEN
		INSERT (
			r.RESERV_ID, 
			r.STORE_ID, 
			r.USER_ID, 
			r.RESERV_DATE, 
			r.RESERV_HOUR, 
			r.RESERV_MIN, 
			r.RESERV_PERSONNEL
			)
		VALUES (
			RESERV_SEQ.NEXTVAL,
			 #{storeId}, 
			 #{userId}, 
			 #{reservDate}, 
			 #{reservHour}, 
			 #{reservMin}, 
			 0
			)
	</insert>
	
	<update id="updateDummy">
		UPDATE RESERV
		SET RESERV_PERSONNEL = #{reservPersonnel}
		WHERE RESERV_ID = #{reservId}
	</update>
	
	<select id="selectSequenceCurrval" resultType="Integer">
		SELECT RESERV_SEQ.CURRVAL FROM DUAL
	</select>
	
	<select id="lockReservTable">
		LOCK TABLE RESERV IN EXCLUSIVE MODE
	</select>
	
</mapper>