<?xml version="1.0" encoding="UTF-8"?>
<!-- Mapper XML 설정 태그 -->
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.eatplatform.web.persistence.ReservMapper">

	<resultMap type="com.eatplatform.web.domain.ReservVO" id="reservResultMap">
		<id property="reservId" column="RESERV_ID"/>
		<result property="storeId" column="STORE_ID"/>
		<result property="storeName" column="STORE_NAME"/>
		<result property="userId" column="USER_ID"/>
		<result property="reservDate" column="RESERV_DATE"/>
		<result property="reservHour" column="RESERV_HOUR"/>
		<result property="reservMin" column="RESERV_MIN"/>
		<result property="reservPersonnel" column="RESERV_PERSONNEL"/>
		<result property="reservDateCreated" column="RESERV_DATE_CREATED"/>
	</resultMap>
	
	<resultMap type="com.eatplatform.web.domain.StoreScheduleVO" id="storeScheduleResultMap">
		<id property="hour" column="RESERV_HOUR"/>
		<result property="min" column="RESERV_MIN"/>
		<result property="reservDate" column="RESERV_DATE"/>
		<result property="totalPersonnel" column="TOTAL_PERSONNEL"/>
		<result property="reservTeam" column="RESERV_TEAM"/>
	</resultMap>
	
	<resultMap type="com.eatplatform.web.domain.JoinReservUserNameVO" id="joinReservUserNameResultMap">
		<id property="reservId" column="RESERV_ID"/>
		<result property="storeId" column="STORE_ID"/>
		<result property="userId" column="USER_ID"/>
		<result property="storeName" column="STORE_NAME"/>
		<result property="reservDate" column="RESERV_DATE"/>
		<result property="reservHour" column="RESERV_HOUR"/>
		<result property="reservMin" column="RESERV_MIN"/>
		<result property="reservPersonnel" column="RESERV_PERSONNEL"/>
		<result property="reservDateCreated" column="RESERV_DATE_CREATED"/>
		<result property="name" column="NAME"/>
		<result property="phone" column="PHONE"/>
	</resultMap>
	
	<select id="selectPagingToDay" resultMap="reservResultMap">
		SELECT r.*, 
	       (
	           SELECT s.STORE_NAME 
	           FROM STORE s 
	           WHERE s.STORE_ID = r.STORE_ID
	       ) AS STORE_NAME
		FROM (
		    SELECT RESERV_ID, STORE_ID, USER_ID, RESERV_DATE, RESERV_HOUR, RESERV_MIN, RESERV_PERSONNEL, RESERV_DATE_CREATED,
		           ROW_NUMBER() OVER (ORDER BY RESERV_DATE ASC) AS RN
		    FROM RESERV
		    WHERE USER_ID = #{userId} AND RESERV_DATE >= TRUNC(SYSDATE)
		) r
		WHERE r.RN BETWEEN #{start} AND #{end}
	</select>
	
	<select id="selectPagingPrevDay" resultMap="reservResultMap">
		SELECT r.*, 
	       (
	           SELECT s.STORE_NAME 
	           FROM STORE s 
	           WHERE s.STORE_ID = r.STORE_ID
	       ) AS STORE_NAME
		FROM (
		    SELECT RESERV_ID, STORE_ID, USER_ID, RESERV_DATE, RESERV_HOUR, RESERV_MIN, RESERV_PERSONNEL, RESERV_DATE_CREATED,
		           ROW_NUMBER() OVER (ORDER BY RESERV_DATE DESC) AS RN
		    FROM RESERV
		    WHERE USER_ID = #{userId} AND RESERV_DATE <![CDATA[<]]> TRUNC(SYSDATE)
		) r
		WHERE r.RN BETWEEN #{start} AND #{end}
	</select>
	
	<select id="selectToDayTotalCount" resultType="Integer">
		SELECT COUNT(*)
		FROM RESERV
		WHERE USER_ID = #{userId}
		AND RESERV_DATE >= TRUNC(SYSDATE)
	</select>
	
	<select id="selectPrevDayTotalCount" resultType="Integer">
		SELECT COUNT(*)
		FROM RESERV
		WHERE USER_ID = #{userId}
		AND RESERV_DATE <![CDATA[<]]> TRUNC(SYSDATE)
	</select>
	
	<insert id="insert">
		<selectKey resultType="Integer" keyProperty="reservId" order="BEFORE">
			SELECT (NVL(MAX(RESERV_ID), 0) + 1) AS RESERV_ID FROM RESERV
		</selectKey>
		INSERT INTO RESERV
		VALUES(
			#{reservId},
			#{storeId},
			#{userId},
			#{reservDate},
			#{reservHour},
			#{reservMin},
			#{reservPersonnel},
			SYSDATE
		)
	</insert>
	
	<delete id="delete">
		DELETE RESERV
		WHERE RESERV_ID = #{reservId}
	</delete>
	
	<select id="selectSchedule" resultMap="storeScheduleResultMap">
		SELECT RESERV_DATE, RESERV_HOUR AS HOUR, RESERV_MIN AS MIN, SUM(RESERV_PERSONNEL) AS TOTAL_PERSONNEL
		FROM RESERV
		WHERE STORE_ID = #{storeId}
		AND RESERV_DATE = #{reservDate}
		GROUP BY RESERV_DATE, RESERV_HOUR, RESERV_MIN
		ORDER BY HOUR
	</select>
	
	<select id="selectTotalPersonnelByStoreIdDateHourMin" resultType="Integer">
		SELECT NVL(SUM(RESERV_PERSONNEL), 0) AS TOTAL_PERSONNEL
		FROM RESERV
		WHERE STORE_ID = #{storeId}
		  AND RESERV_DATE = #{reservDate}
		  AND RESERV_HOUR = #{reservHour}
		  AND RESERV_MIN = #{reservMin}
	</select>
	
	<select id="selectStoreScheduleListByStoreIdReservDate" resultMap="storeScheduleResultMap">
		SELECT RESERV_DATE, RESERV_HOUR, RESERV_MIN, SUM(RESERV_PERSONNEL) AS TOTAL_PERSONNEL, COUNT(USER_ID) AS RESERV_TEAM FROM RESERV
		WHERE RESERV_DATE = #{reservDate}
		AND STORE_ID = #{storeId}
		GROUP BY RESERV_DATE, RESERV_HOUR, RESERV_MIN
		ORDER BY RESERV_HOUR ASC
	</select>
	
	<select id="selectReservListByHolidayList" parameterType="map" resultMap="reservResultMap">
		SELECT * FROM RESERV
		WHERE STORE_ID = #{storeId}
		AND RESERV_DATE IN
		<foreach collection="holidayList" item="list" open="(" close=")" separator=",">
			#{list.holiday}
		</foreach>
	</select>
	
	<select id="selectReservListByStoreIdReservDateReservHourReservMin" resultMap="joinReservUserNameResultMap">
		SELECT r.*, u.NAME, u.PHONE
		FROM RESERV r
		LEFT OUTER JOIN USER_MEMBER u
		ON r.USER_ID = u.USER_ID
		WHERE STORE_ID = #{storeId}
		AND RESERV_DATE = #{reservDate}
		AND RESERV_HOUR = #{reservHour}
		AND RESERV_MIN = #{reservMin}
	</select>
	
	<select id="selectReservDateByHolidayListStoreId" parameterType="map" resultMap="reservResultMap">
		SELECT RESERV_DATE FROM (
		    SELECT RESERV_DATE, COUNT(RESERV_ID) AS COUNT FROM RESERV
		    WHERE STORE_ID = #{storeId} 
		    AND RESERV_DATE IN
		    <foreach collection="holidayList" item="list" open="(" close=")" separator=",">
		    	#{list.holiday}
		    </foreach>
		    GROUP BY RESERV_DATE
		)
		ORDER BY RESERV_DATE
	</select>
	
</mapper>